# for test upstream server see [repo](https://github.com/tailcallhq/rust-grpc)
schema
  @server(port: 8000)
  @upstream(baseURL: "http://localhost:50051", httpCache: 42, batch: {delay: 10})
  @link(id: "news", src: "../tailcall-fixtures/fixtures/protobuf/news.proto", type: Protobuf) {
  query: Query
  mutation: Mutation
  # subscription: Subscription
}

type Query {
  newsById(news: NewsInput!): News! @grpc(method: "news.NewsService.GetNews", body: "{{.args.news}}")
  newsByIdBatch(news: NewsInput!): News!
    @grpc(method: "news.NewsService.GetMultipleNews", body: "{{.args.news}}", batchKey: ["news", "id"])
}

type Mutation {
  addNews(news: News!): News! @grpc(method: "news.NewsService.AddNews", body: "{{.args.news}}")
}

type Subscription {
  news: News! @grpc(method: "news.NewsService.GetAllNews")
}

type News {
  id: Int
  title: String
  body: String
  postImage: String
  status: Status
}

enum Status {
  PUBLISHED
  DRAFT
  DELETED
}

input NewsInput {
  id: Int
}

type NewsData {
  news: [News]!
}
